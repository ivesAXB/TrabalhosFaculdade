- Primeiro erro que me deparei foi tentar executar/compilar o arquivo que eu estava editando, sendo que eu não estava nem na pasta
TrabalhosFaculdade.

- Para criar classe: NomeDaClasse NomeDaVariavel = new NomeClasse(FonteDosDados)

- Ao criar a classe Scanner, e criar a variável que vou utilizar para ler (variavel leitor) e adicionar a fonte de onde sairá esses 
FonteDosDados (FonteDosDados) é uma boa prática eu fechar este leitor no final do uso com a função leitor.close(); 

- Uma observação, ao aparecer o Primeiro erro que eu citei, eu tentei rodar com o comando javac .... e criou uma pasta .class, a compilada.

-Descobri também que não tem exponemciação em java então precisei utilizar um método chamado math.pow();

-Math.pow(base, expoente); pode ser utilizado dentro de uma outra variavel quando não precisar guardar ela.

-Ao realizar o exercicio 6 eu me deparei com o problema: 
    if (bool_1 == "sim") {
        for (int i = 0; i < 10; i++) {
           System.out.println(i);
        }
    }
Não estava entrando no if, bool_1 é uma String que o user digita, mas aprendi que para verificar uma condição com uma variável tipo string devo usar:
    if (bool_1.equals("sim")) {
        System.out.println("Entrou no if!");
    }
a função ou método .equals ("");

Pode até misturar isso com o método .trim(); e .equalsIgnoreCase();

-No exercício 7 me deparei com um problema um pouco pior que os anteriores, que foi criar uma array, ao descobrir que utiliza-se o comando: double[] valores = new double[n-1];
para criar uma array, eu entendi que na verdade array é parecido com o objeto. TipoArray[] variavel = new Tipo[tamanho];

-Ler os comentarios no exercicio 7, talvez sejam bem importantes e é melhor para entender por lá.

-Ok cheguei em uma parte que eu tive que recorrer à ajuda da IA, na questão 10 eu sabia que eu precisava usar recursão, eu ja li sobre recursão em um livro, porém
eu não tinha a menor ideia de como eu faria isso, pensei em todos os for possíveis, while e if, mas eu esqueci completamente da existencia de FUNÇÕES.

-Custou para eu entender o que acontecia dentro de uma recursão, em livros parece muito mais fácil, mas eu admito que sem o livro eu não entenderia, tenho certeza, nao da
forma que entendi, concluí que a melhor maneira de aprender isso seria com o livro em uma mão, o código em outra, e um chatIA na terceira mão (como vai conseguir ela é com você).

-Ao realizar o exercício 11 eu notei que por mais que eu entenda como funciona o for, ainda causa um nó bem grande na minha cabeça, então resolvi deixar uma logica aqui:
System.out.println("Quantos números irá digitar? ");   
        int n = leitor.nextInt(); ---------------------------------------------------------------------->|ele vai ler o indice e atribuir à uma variavel
        System.out.println("Digite uma sequencia de números"); ----------------------------------------->|ele vai pedir os números, mas eu só vou ler dentro do for.
        int[] inteiros = new int[n]; ------------------------------------------------------------------->|me engano achando que ele vai ler aqui, mas aqui é para criar o objeto.

        int maior_numero = 0; -------------------------------------------------------------------------->|só para exercicio de buscar maior número.

        for (int i = 0; i < n; i++){ ------------------------------------------------------------------->|aqui a brincadeira começa, aqui o i precisa entrar como índice...
            inteiros[i] = leitor.nextInt(); ------------------------------------------------------------>|se eu colocar ele como i = 1 ele vai ler o indice 0 como 1 e isso vai 
            if(maior_numero < inteiros[i]){ -------------------------------------------------------------|causar um certo conflito pq ele vai começar a ler do incide 1, e vai
                maior_numero = inteiros[i]; -------------------------------------------------------------|até o índice 6, que não existe, ou seja ele vai ler 1 a menos e depois
            }  ------------------------------------------------------------------------------------------|tentar ler um a mais que não existe.
            System.out.printf("Pegando o número %d e colocando no indice %d.\n",inteiros[i], i);
        }

-